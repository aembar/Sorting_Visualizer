{"version":3,"sources":["logo.svg","sortingAlgorithms/sortingAlgorithms.js","sortingAlgorithms/quickSort.js","sortingAlgorithms/heapSort.js","Button.js","SortingVisualizer/MenuItems.js","SortingVisualizer/SortingVisualizer.jsx","sortingAlgorithms/bubbleSort.js","App.js","reportWebVitals.js","index.js"],"names":["getMergeSortAnimations","array","animations","length","auxiliaryArray","slice","mergeSortHelper","mainArray","startIdx","endIdx","middleIdx","Math","floor","k","i","j","push","doMerge","getQuickSortAnimations","quickSortFirst","start","end","pivotIdx","pivotValue","lower","run","temp","partition","getHeapSortAnimations","arr","arrLength","heapify","swap","heapSort","idx","leftIdx","rightIdx","max","firstIdx","lastIdx","STYLES","SIZES","Button","children","type","onClick","buttonStyle","buttonSize","checkButtonStyle","includes","checkButtonSize","className","MenuItems","title","url","cName","ANIMATION_SPEED_MS","NUMBER_OF_ARRAY_BARS","PRIMARY_COLOR","DISABLED_BUTTON","ENABLED_BUTTON","SECONDARY_COLOR","SortingVisualizer","props","speedAndBars","x","genRandomArray","numberOfArrayBars","number","randomIntFromInterval","document","querySelector","style","backgroundColor","setState","updateBarsState","width","arrayBars","a","Promise","res","rej","getElementsByClassName","newArrayBars","something","state","getElementById","setAttribute","removeAttribute","this","setColors","resetArray","buttons","disabled","barOneIdx","barTwoIdx","barOneStyle","barTwoStyle","color","setTimeout","newHeight","height","arrayBars1","colorChange","bubbleSort","getBubbleSortAnimations","buttons2","class","handleClick","clicked","float","mergeSort","quickSort","role","aria-label","href","id","map","item","index","value","valign","React","Component","min","random","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.fb574d12.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","export function getMergeSortAnimations(array) {\n    const animations = [];\n    if (array.length <= 1) return array;\n    const auxiliaryArray = array.slice();\n    mergeSortHelper(array, 0, array.length - 1, auxiliaryArray, animations);\n    return animations;\n  }\n  \n  function mergeSortHelper(mainArray, startIdx, endIdx, auxiliaryArray, animations,) {\n    if (startIdx === endIdx) return;\n    const middleIdx = Math.floor((startIdx + endIdx) / 2);\n    mergeSortHelper(auxiliaryArray, startIdx, middleIdx, mainArray, animations);\n    mergeSortHelper(auxiliaryArray, middleIdx + 1, endIdx, mainArray, animations);\n    doMerge(mainArray, startIdx, middleIdx, endIdx, auxiliaryArray, animations);\n  }\n  \n  function doMerge(\n    mainArray,\n    startIdx,\n    middleIdx,\n    endIdx,\n    auxiliaryArray,\n    animations,\n  ) {\n    let k = startIdx;\n    let i = startIdx;\n    let j = middleIdx + 1;\n    while (i <= middleIdx && j <= endIdx) {\n      // These are the values that we're comparing; we push them once\n      // to change their color.\n      animations.push([i, j]);\n      // These are the values that we're comparing; we push them a second\n      // time to revert their color.\n      animations.push([i, j]);\n      if (auxiliaryArray[i] <= auxiliaryArray[j]) {\n        // We overwrite the value at index k in the original array with the\n        // value at index i in the auxiliary array.\n        animations.push([k, auxiliaryArray[i]]);\n        mainArray[k++] = auxiliaryArray[i++];\n      } else {\n        // We overwrite the value at index k in the original array with the\n        // value at index j in the auxiliary array.\n        animations.push([k, auxiliaryArray[j]]);\n        mainArray[k++] = auxiliaryArray[j++];\n      }\n    }\n    while (i <= middleIdx) {\n      // These are the values that we're comparing; we push them once\n      // to change their color.\n      animations.push([i, i]);\n      // These are the values that we're comparing; we push them a second\n      // time to revert their color.\n      animations.push([i, i]);\n      // We overwrite the value at index k in the original array with the\n      // value at index i in the auxiliary array.\n      animations.push([k, auxiliaryArray[i]]);\n      mainArray[k++] = auxiliaryArray[i++];\n    }\n    while (j <= endIdx) {\n      // These are the values that we're comparing; we push them once\n      // to change their color.\n      animations.push([j, j]);\n      // These are the values that we're comparing; we push them a second\n      // time to revert their color.\n      animations.push([j, j]);\n      // We overwrite the value at index k in the original array with the\n      // value at index j in the auxiliary array.\n      animations.push([k, auxiliaryArray[j]]);\n      mainArray[k++] = auxiliaryArray[j++];\n    }\n  }","//Always selecting the first element as pivot\nexport function getQuickSortAnimations(array) {\n    const animations = [];\n    let start = 0;\n    let end = array.length - 1;\n    quickSortFirst(array, start, end, animations);\n    return animations;\n  }\n  \n  function quickSortFirst(array, start, end, animations) {\n    if (start >= end) {\n      return;\n    }\n    let pivotIdx = partition(array, start, end, animations);\n    quickSortFirst(array, start, pivotIdx - 1, animations);\n    quickSortFirst(array, pivotIdx + 1, end, animations);\n  }\n  \n  function partition(array, start, end, animations) {\n    let pivotValue = array[start];\n    let lower = start + 1;\n    let run = true;\n    while (run) {\n      while (array[lower] <= pivotValue && lower <= end) {\n        animations.push([start, lower]);\n        animations.push([start, lower]);\n        animations.push([0, array[0]]);\n        animations.push([0, array[0]]);\n        lower += 1;\n      }\n      while (array[end] >= pivotValue && lower <= end) {\n        animations.push([start, end]);\n        animations.push([start, end]);\n        animations.push([0, array[0]]);\n        animations.push([0, array[0]]);\n        end -= 1;\n      }\n      if (end < lower) {\n        run = false;\n      } else {\n        animations.push([lower, end]);\n        animations.push([lower, end]);\n        animations.push([lower, array[end]]);\n        animations.push([end, array[lower]]);\n        let temp = array[lower];\n        array[lower] = array[end];\n        array[end] = temp;\n      }\n    }\n    animations.push([start, end]);\n    animations.push([start, end]);\n    animations.push([start, array[end]]);\n    animations.push([end, pivotValue]);\n    let temp = array[end];\n    array[end] = pivotValue;\n    array[start] = temp;\n    return end;\n  }","export function getHeapSortAnimations(array) {\n    const animations = [];\n    heapSort(array, animations);\n    return animations;\n  }\n  \n  function heapSort(arr, animations) {\n    var arrLength = arr.length;\n    for (var i = Math.floor(arrLength / 2); i >= 0; i--) {\n      //builds the max heap by making all parent node bigger than child node\n      //this initialize and turns the array into a max heap for the first time\n      //i is the index of the item that has child node(for odd num) and therefore worth checking\n      //we fills the heap with index from zero to max, from left to right across the levels\n      heapify(arr, i, arrLength, animations);\n    }\n  \n    for (i = arrLength - 1; i > 0; i--) {\n      //now that we have a max heap, we continually exchanges the root node with the last node\n      //and removes the last node which contains the max value and therefore considered sorted\n      swap(arr, 0, i, animations);\n      //after the swap, the root node may no longer be the biggest value, hence required heapify.\n      //since last node is sorted, reduce the array length by one\n      arrLength--;\n      heapify(arr, 0, arrLength, animations);\n    }\n  }\n  \n  function heapify(arr, idx, arrLength, animations) {\n    var leftIdx = 2 * idx + 1;\n    var rightIdx = 2 * idx + 2;\n    //check if the parent node is bigger than child node\n    var max = idx;\n    if (leftIdx < arrLength && arr[leftIdx] > arr[max]) {\n      animations.push([leftIdx, max]);\n      animations.push([leftIdx, max]);\n      animations.push([0, arr[0]]);\n      animations.push([0, arr[0]]);\n      max = leftIdx; // if left exists and bigger\n    }\n    if (rightIdx < arrLength && arr[rightIdx] > arr[max]) {\n      animations.push([rightIdx, max]);\n      animations.push([rightIdx, max]);\n      animations.push([0, arr[0]]);\n      animations.push([0, arr[0]]);\n      max = rightIdx; // if right exists and bigger\n    }\n    if (max !== idx) {\n      // if needs to change\n      swap(arr, idx, max, animations);\n      heapify(arr, max, arrLength, animations); // recursive to the end for the root node\n    }\n  }\n  \n  function swap(arr, firstIdx, lastIdx, animations) {\n    animations.push([firstIdx, lastIdx]);\n    animations.push([firstIdx, lastIdx]);\n    animations.push([firstIdx, arr[lastIdx]]);\n    animations.push([lastIdx, arr[firstIdx]]);\n    var temp = arr[firstIdx];\n    arr[firstIdx] = arr[lastIdx];\n    arr[lastIdx] = temp;\n  }","import React from 'react'\nimport './Button.css'\n\nconst STYLES = [\n    'btn--primary',\n    'btn--outline'\n]\n\nconst SIZES = [\n    'btn--medium',\n    'btn--large'\n]\n\nexport const Button = ({\n    children,\n    type,\n    onClick,\n    buttonStyle,\n    buttonSize\n}) => {\n\n    const checkButtonStyle = STYLES.includes(buttonStyle) ? buttonStyle : STYLES[0]\n\n    const checkButtonSize = SIZES.includes(buttonSize) ? buttonSize : SIZES[0]\n\n    return (\n        <button className={`btn ${checkButtonStyle} ${checkButtonSize}`} onClick={onClick} type={type}>\n            {children}\n        </button>\n    )\n}","export const MenuItems = [\n    {\n        title: 'Github Repo',\n        url: 'https://github.com/aembar/Sorting_Visualizer.git',\n        cName: 'nav-links'\n    }\n\n]\n\n","import React from 'react';\nimport {getMergeSortAnimations} from '../sortingAlgorithms/sortingAlgorithms.js';\nimport {getQuickSortAnimations} from '../sortingAlgorithms/quickSort.js';\nimport { getHeapSortAnimations } from \"../sortingAlgorithms/heapSort.js\";\nimport { getBubbleSortAnimations } from \"../sortingAlgorithms/bubbleSort.js\";\nimport { Button } from \"../Button\"\nimport { Button2 } from \"../Button2\"\n\n\n\n\nimport './SortingVisualizer.css';\nimport { MenuItems } from \"./MenuItems\"\nimport styled, { css } from 'styled-components';\nimport { findAllByDisplayValue } from '@testing-library/react';\n\n var ANIMATION_SPEED_MS = 3;\n\n var NUMBER_OF_ARRAY_BARS = 180;\n\n var currentsizenum = 1;\n\n var RESTORE_TIME = 0;\n\n\nconst PRIMARY_COLOR = \"rgb(0, 255, 191)\";\n\nconst DISABLED_BUTTON = \"Currently Disabled\"\nconst ENABLED_BUTTON = {\n    n8: \"Increase speed to 18ms and decrease number of bars to an eighth of original size.\",\n    n4: \"Increase speed to 15ms and decrease number of bars to a quarter of the original size.\",\n    n2: \"Increase speed to 10ms and decrease number of bars to half the original size.\",\n    n: \"Default speed of 5ms and original size of the number of bars.\",\n    n5: \"Decrease speed to 4ms and 1.25x number of bars.\"\n}\n\n// This is the color of array bars that are being compared throughout the animations.\nconst SECONDARY_COLOR = \"red\";\n\nexport default class SortingVisualizer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            array: [],\n            \n        };\n      }\n      disableSortButtons() {\n        document.getElementById('smallest').setAttribute(\"disabled\",\"disabled\");\n        document.getElementById('smallest').title = DISABLED_BUTTON;\n     \n        document.getElementById('smaller').setAttribute(\"disabled\",\"disabled\");\n        document.getElementById('smaller').title = DISABLED_BUTTON;\n\n        document.getElementById('small').setAttribute(\"disabled\",\"disabled\");\n        document.getElementById('small').title = DISABLED_BUTTON;\n\n        document.getElementById('original').setAttribute(\"disabled\",\"disabled\");\n        document.getElementById('original').title = DISABLED_BUTTON;\n\n        document.getElementById('more').setAttribute(\"disabled\",\"disabled\");\n        document.getElementById('more').title = DISABLED_BUTTON;\n    }\n    restoreStoreButtons() {\n      document.getElementById('smallest').removeAttribute(\"disabled\");\n      document.getElementById('smallest').title = ENABLED_BUTTON.n8;\n   \n      document.getElementById('smaller').removeAttribute(\"disabled\");\n      document.getElementById('smaller').title = ENABLED_BUTTON.n4;\n\n      document.getElementById('small').removeAttribute(\"disabled\");\n      document.getElementById('small').title = ENABLED_BUTTON.n2;\n\n      document.getElementById('original').removeAttribute(\"disabled\");\n      document.getElementById('original').title = ENABLED_BUTTON.n;\n\n      document.getElementById('more').removeAttribute(\"disabled\");\n      document.getElementById('more').title = ENABLED_BUTTON.n5;\n    }\n\n\n    speedAndBars = x => {\n      if (x === 1) {\n        this.genRandomArray(180, 1); // n\n        //this.restoreStoreButtons();\n      } else if (x === 2) {\n       this.genRandomArray(225, 2); // 1.25n \n       //this.restoreStoreButtons();\n      }  else if (x === -1) {\n        this.genRandomArray(90, -1); // 0.5n\n       // this.restoreStoreButtons();\n      } else if (x === -2) {\n        this.genRandomArray(22, -2); // 0.125n\n       // this.restoreStoreButtons();\n      }else if (x === -3) {\n        this.genRandomArray(45, -3); // 0.25n\n       // this.restoreStoreButtons();\n      }\n    };\n\n   /* resetColor = () => {\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      for (let i = 0; i < arrayBars.length; i++) {\n        arrayBars[i].style.backgroundColor = PRIMARY_COLOR;\n      }\n    };*/\n\n    genRandomArray = (numberOfArrayBars, number) => {\n      // console.log(\"height \", window.innerHeight);\n      // console.log(\"width \", window.innerWidth);\n      // if (window.innerWidth >= 1400) {\n      //   numberOfArrayBars -= 20;\n      // }\n      \n      NUMBER_OF_ARRAY_BARS = numberOfArrayBars;\n\n      if (number === 1) {\n        let array = [];\n        for (let i = 0; i < numberOfArrayBars; i++) {\n          array.push(randomIntFromInterval(10, 645));\n        }\n        document.querySelector(\".n\").style.backgroundColor = \"red\";\n        document.querySelector(\".nby8\").style.backgroundColor = \"mintcream\";\n        document.querySelector(\".nby2\").style.backgroundColor = \"mintcream\";\n        document.querySelector(\".nby4\").style.backgroundColor = \"mintcream\";\n        document.querySelector(\".n5by4\").style.backgroundColor = \"mintcream\";\n        ANIMATION_SPEED_MS = 5;\n        this.setState({ array });\n        //if we have called arrayBars with className 'array-bar', we wouldn't get the current clicked speed/bar button but the previous selection as setState is an asynchrnous so it doesn't update instantly, so we created seperate function for handling async function and get current state of the arrayBars\n        this.updateBarsState(4);\n      } else if (number === 2) {\n        let array = [];\n        for (let i = 0; i < numberOfArrayBars; i++) {\n          array.push(randomIntFromInterval(5, 645));\n        }\n        document.querySelector(\".n\").style.backgroundColor = \"mintcream\";\n        document.querySelector(\".nby8\").style.backgroundColor = \"mintcream\";\n        document.querySelector(\".nby2\").style.backgroundColor = \"mintcream\";\n        document.querySelector(\".nby4\").style.backgroundColor = \"mintcream\";\n        document.querySelector(\".n5by4\").style.backgroundColor = \"red\";\n        ANIMATION_SPEED_MS = 4;\n        this.setState({ array });\n        this.updateBarsState(3.5);\n      } else if (number === -1) {\n        let array = [];\n        for (let i = 0; i < numberOfArrayBars; i++) {\n          array.push(randomIntFromInterval(5, 645));\n        }\n  \n       document.querySelector(\".n\").style.backgroundColor = \"mintcream\";\n       document.querySelector(\".nby8\").style.backgroundColor = \"mintcream\";\n       document.querySelector(\".nby2\").style.backgroundColor = \"red\";\n       document.querySelector(\".nby4\").style.backgroundColor = \"mintcream\";\n       document.querySelector(\".n5by4\").style.backgroundColor = \"mintcream\";\n\n        ANIMATION_SPEED_MS = 10;\n        this.setState({ array });\n        this.updateBarsState(9.5);\n      } else if (number === -2) {\n        let array = [];\n        for (let i = 0; i < numberOfArrayBars; i++) {\n          array.push(randomIntFromInterval(5, 645));\n        }\n        document.querySelector(\".n\").style.backgroundColor = \"mintcream\";\n        document.querySelector(\".nby8\").style.backgroundColor = \"red\";\n        document.querySelector(\".nby2\").style.backgroundColor = \"mintcream\";\n        document.querySelector(\".nby4\").style.backgroundColor = \"mintcream\";\n        document.querySelector(\".n5by4\").style.backgroundColor = \"mintcream\";\n        ANIMATION_SPEED_MS = 18;\n        this.setState({array });\n        this.updateBarsState(30);\n      }\n      else if (number === -3) {\n        let array = [];\n        for (let i = 0; i < numberOfArrayBars; i++) {\n          array.push(randomIntFromInterval(5, 645));\n        }\n        document.querySelector(\".n\").style.backgroundColor = \"mintcream\";\n        document.querySelector(\".nby8\").style.backgroundColor = \"mintcream\";\n        document.querySelector(\".nby4\").style.backgroundColor = \"red\";\n        document.querySelector(\".nby2\").style.backgroundColor = \"mintcream\";\n        document.querySelector(\".n5by4\").style.backgroundColor = \"mintcream\";\n        ANIMATION_SPEED_MS = 18;\n        this.setState({array });\n        this.updateBarsState(20);\n      }\n      //this.resetColor();\n    };\n\n    updateBarsState = width => {\n      // this.setState({ array: array });\n      let arrayBars = [];\n      async function something() {\n        const a = new Promise((res, rej) => {\n          const arrayBars = document.getElementsByClassName(\"array-bar\");\n          res(arrayBars);\n        });\n        const newArrayBars = await a;\n        arrayBars = newArrayBars;\n        for (let k = 0; k < arrayBars.length; k++) {\n          arrayBars[k].style.width = `${width}px`;\n        }\n        // console.log(newArrayBars.length);\n        // console.log(arrayBars.length);\n      }\n      something();\n    };\n\n\n    componentDidMount() {\n        this.setColors();\n        this.resetArray();\n    }\n\n    setColors(){\n      document.querySelector(\".n\").style.backgroundColor = \"red\";\n      document.querySelector(\".nby8\").style.backgroundColor = \"mintcream\";\n      document.querySelector(\".nby2\").style.backgroundColor = \"mintcream\";\n      document.querySelector(\".nby4\").style.backgroundColor = \"mintcream\";\n      document.querySelector(\".n5by4\").style.backgroundColor = \"mintcream\";\n    }\n\n    resetArray(){\n      \n        const array = [];\n        for(let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\n            array.push(randomIntFromInterval(5,645));\n        }\n        this.setState({array});\n    }\n\n    mergeSort() {\n       // this.disableSortButtons();\n        const animations = getMergeSortAnimations(this.state.array);\n        const buttons = document.getElementsByClassName(\"btn\");\n        for (let k = 0; k < buttons.length; k++) {\n             buttons[k].disabled = true;\n       }\n       /*const buttons2 = document.getElementsByClassName(\"btn-group\");\n       for (let i = 0; i < buttons2.length; i++) {\n            buttons2[i].disabled = true;\n      }*/\n       \n        for (let i = 0; i < animations.length; i++) {\n          const arrayBars = document.getElementsByClassName('array-bar');\n          const isColorChange = i % 3 !== 2;\n          if (isColorChange) {\n            const [barOneIdx, barTwoIdx] = animations[i];\n            const barOneStyle = arrayBars[barOneIdx].style;\n            const barTwoStyle = arrayBars[barTwoIdx].style;\n            const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n            setTimeout(() => {\n              barOneStyle.backgroundColor = color;\n              barTwoStyle.backgroundColor = color;\n            }, i * ANIMATION_SPEED_MS);\n          } else {\n            setTimeout(() => {\n              const [barOneIdx, newHeight] = animations[i];\n              const barOneStyle = arrayBars[barOneIdx].style;\n              barOneStyle.height = `${newHeight}px`;\n            }, i * ANIMATION_SPEED_MS);\n          }\n        }\n        const arrayBars1 = document.getElementsByClassName(\"array-bar\");\n        ANIMATION_SPEED_MS = 4;\n        for (let i = 0; i < arrayBars1.length; i++) {\n          setTimeout(() => {\n            arrayBars1[i].style.backgroundColor = \"lightgreen\";\n            //re-enabling all the buttons\n            for (let k = 0; k < buttons.length; k++) {\n              buttons[k].disabled = false;\n            }\n            /*for (let i = 0; i < buttons2.length; i++) {\n              buttons2[i].disabled = false;\n            }*/\n           // this.restoreStoreButtons();\n          }, ANIMATION_SPEED_MS * animations.length + 1 + i * 10);\n          setTimeout(() => {\n               arrayBars1[i].style.backgroundColor = PRIMARY_COLOR;\n          }, ANIMATION_SPEED_MS * animations.length + 1 + i * 11);\n      }\n    }\n    quickSort() {\n      //this.disableSortButtons();\n      \n        const animations = getQuickSortAnimations(this.state.array);\n        const buttons = document.getElementsByClassName(\"btn\");\n        for (let k = 0; k < buttons.length; k++) {\n             buttons[k].disabled = true;\n        }\n     /* const buttons2 = document.getElementsByClassName(\"btn-group\");\n       for (let i = 0; i < buttons2.length; i++) {\n            buttons2[i].disabled = true;\n      }*/\n        for (let i = 0; i < animations.length; i++) {\n          const arrayBars = document.getElementsByClassName(\"array-bar\");\n          const isColorChange = i % 4 <= 1;\n          //const isColorChange = i % 3 !== 2;\n          if (isColorChange) {\n            const [barOneIdx, barTwoIdx] = animations[i];\n            const barOneStyle = arrayBars[barOneIdx].style;\n            const barTwoStyle = arrayBars[barTwoIdx].style;\n            const color = i % 4 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n            //const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n            setTimeout(() => {\n              barOneStyle.backgroundColor = color;\n              barTwoStyle.backgroundColor = color;\n            }, i * ANIMATION_SPEED_MS * 2 );\n          } else {\n            setTimeout(() => {\n              const [barOneIdx, newHeight] = animations[i];\n              const barOneStyle = arrayBars[barOneIdx].style;\n              barOneStyle.height = `${newHeight}px`;\n            }, i * ANIMATION_SPEED_MS * 2);\n          }\n      }\n      const arrayBars1 = document.getElementsByClassName(\"array-bar\");\n        for (let i = 0; i < arrayBars1.length; i++) {\n          setTimeout(() => {\n            arrayBars1[i].style.backgroundColor = \"lightgreen\";\n            //re-enabling all the buttons\n            for (let k = 0; k < buttons.length; k++) {\n              buttons[k].disabled = false;\n            }\n            /*for (let i = 0; i < buttons2.length; i++) {\n              buttons2[i].disabled = false;\n            }*/\n           // this.restoreStoreButtons();\n          }, ANIMATION_SPEED_MS * 2 * animations.length + 1 + i * 10);\n          setTimeout(() => {\n            arrayBars1[i].style.backgroundColor = PRIMARY_COLOR;\n       }, ANIMATION_SPEED_MS  * 2 * animations.length + 1 + i * 11);\n    }\n  }\n\n    heapSort() {\n    //  this.disableSortButtons();\n      const buttons = document.getElementsByClassName(\"btn\");\n        for (let k = 0; k < buttons.length; k++) {\n             buttons[k].disabled = true;\n       }\n      /* const buttons2 = document.getElementsByClassName(\"btn-group\");\n       for (let i = 0; i < buttons2.length; i++) {\n            buttons2[i].disabled = true;\n      }*/\n        const animations = getHeapSortAnimations(this.state.array);\n        for (let i = 0; i < animations.length; i++) {\n          const colorChange = i % 4 <= 1;\n          const arrayBars = document.getElementsByClassName(\"array-bar\");\n          if (colorChange) {\n            const [barOneIdx, barTwoIdx] = animations[i];\n            const barOneStyle = arrayBars[barOneIdx].style;\n            const barTwoStyle = arrayBars[barTwoIdx].style;\n            const color = i % 4 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n            setTimeout(() => {\n              barOneStyle.backgroundColor = color;\n              barTwoStyle.backgroundColor = color;\n            }, i * ANIMATION_SPEED_MS);\n          } else {\n            setTimeout(() => {\n              const [barOneIdx, newHeight] = animations[i];\n              const barOneStyle = arrayBars[barOneIdx].style;\n              barOneStyle.height = `${newHeight}px`;\n            }, i * ANIMATION_SPEED_MS);\n          }\n      }\n      const arrayBars1 = document.getElementsByClassName(\"array-bar\");\n        for (let i = 0; i < arrayBars1.length; i++) {\n          setTimeout(() => {\n           arrayBars1[i].style.backgroundColor = \"lightgreen\";\n            //re-enabling all the buttons\n            for (let k = 0; k < buttons.length; k++) {\n              buttons[k].disabled = false;\n            }\n            /*for (let i = 0; i < buttons2.length; i++) {\n              buttons2[i].disabled = false;\n            }*/\n            //this.restoreStoreButtons();\n          }, ANIMATION_SPEED_MS * animations.length + 1 + i * 10);\n          setTimeout(() => {\n            arrayBars1[i].style.backgroundColor = PRIMARY_COLOR;\n       }, ANIMATION_SPEED_MS * animations.length + 1 + i * 11);\n        }\n        \n    }\n\n    bubbleSort() {\n   //   this.disableSortButtons();\n      const animations = getBubbleSortAnimations(this.state.array);\n      const buttons = document.getElementsByClassName(\"btn\");\n        for (let k = 0; k < buttons.length; k++) {\n             buttons[k].disabled = true;\n       }\n       const buttons2 = document.getElementsByClassName(\"btn-group\");\n       for (let i = 0; i < buttons2.length; i++) {\n           buttons2[i].disabled = true;\n       }\n      for (let i = 0; i < animations.length; i++) {\n        const colorChange = i % 4 <= 1;\n        const arrayBars = document.getElementsByClassName(\"array-bar\");\n        if (colorChange) {\n          const [barOneIdx, barTwoIdx] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          const barTwoStyle = arrayBars[barTwoIdx].style;\n          const color = i % 4 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n          setTimeout(() => {\n            barOneStyle.backgroundColor = color;\n            barTwoStyle.backgroundColor = color;\n          }, i * ANIMATION_SPEED_MS);\n        } else {\n          setTimeout(() => {\n            const [barOneIdx, newHeight] = animations[i];\n            const barOneStyle = arrayBars[barOneIdx].style;\n            barOneStyle.height = `${newHeight}px`;\n          }, i * ANIMATION_SPEED_MS);\n        }\n      }\n\n    const arrayBars1 = document.getElementsByClassName(\"array-bar\");\n        for (let i = 0; i < arrayBars1.length; i++) {\n          setTimeout(() => {\n           arrayBars1[i].style.backgroundColor = \"lightgreen\";\n            //re-enabling all the buttons\n            for (let k = 0; k < buttons.length; k++) {\n              buttons[k].disabled = false;\n            }\n            /*for (let i = 0; i < buttons2.length; i++) {\n              buttons2[i].disabled = false;\n            }*/\n            //this.restoreStoreButtons();\n          }, ANIMATION_SPEED_MS * animations.length + 1 + i * 10);\n          setTimeout(() => {\n            arrayBars1[i].style.backgroundColor = PRIMARY_COLOR;\n       }, ANIMATION_SPEED_MS * animations.length + 1 + i * 12);\n        }\n    }\n\n    render(){\n        const {array} = this.state;\n        return (\n            <>\n             <nav className=\"NavbarItems\">\n                <h1 className=\"navbar-logo\">SortingVisualizer<i class=\"fab fa-react\"></i></h1>\n                <div className=\"menu-icon\" onClick={this.handleClick}>\n                    <i className={this.state.clicked ? 'fas fa-times' : 'fas fa-bars'}></i>\n                </div>\n                <div class=\"btn-toolbar\">\n                <Button onClick={() => this.resetArray()} style={{float: 'right'}}> New Array</Button>\n                <Button onClick={() => this.mergeSort()} style={{float: 'right'}}> Merge Sort </Button>\n                <Button onClick={() => this.quickSort()} style={{float: 'right'}}> Quick Sort </Button>\n                <Button onClick={() => this.heapSort()} style={{float: 'right'}}> Heap Sort </Button>\n                <Button onClick={() => this.bubbleSort()} style={{float: 'right'}}> Bubble Sort </Button>\n                </div>\n                <div\n                  className=\"btn-toolbar\"\n                  role=\"toolbar\"\n                  aria-label=\"Toolbar with button groups\"\n                >\n            \n            <div\n              className=\"btn-group mr-2 buttons\"\n              role=\"group\"\n              aria-label=\"First group\"\n            >\n              \n              <a href='' class=' btn2 btn--primary btn--outline'>Speed/Size:</a>\n        \n              <button1  color=\"mintcream\"\n                backgroundColor = \"mintcream\"\n                type=\"button\"\n                id = 'smallest'\n                className=\"btn btn--primary nby8\"\n                title=\"Increase speed to 18ms and decrease number of bars to an eighth of original size.\"\n                onClick={() => this.speedAndBars(-2)}\n              >\n                n/8\n              </button1>\n              <button1 color=\"mintcream\"\n                backgroundColor = \"mintcream\"\n                type='smaller'\n                id = \"0.25n\"\n                className=\"btn btn--primary nby4\"\n                title=\"Increase speed to 15ms and decrease number of bars to a quarter of the original size.\"\n                onClick={ () => this.speedAndBars(-3)}\n              >\n                n/4\n              </button1>\n              <button1 color=\"mintcream\"\n                backgroundColor = \"mintcream\"\n                type=\"button\"\n                id = 'small'\n                className=\"btn btn--primary nby2\"\n                title=\"Increase speed to 10ms and decrease number of bars to half the original size.\"\n                onClick={ () => this.speedAndBars(-1)}\n              >\n                n/2\n              </button1>\n              <button1 color=\"mintcream\"\n                backgroundColor = \"mintcream\"\n                type=\"button\"\n                id = 'original'\n                className=\"btn btn--primary n\"\n                title=\"Default speed of 5ms and original size(180 bars). \"\n                onClick={() => this.speedAndBars(1)}\n              >\n                n\n              </button1>\n              <button1 color=\"mintcream\"\n                backgroundColor = \"mintcream\"\n                type=\"button\"\n                id = 'more'\n                className=\"btn btn--primary n5by4\"\n                title=\"Decrease speed to 4ms and 1.25x number of bars. \"\n                onClick={ () => this.speedAndBars(2)}\n              >\n                5n/4\n              </button1>\n            </div>\n          </div>\n\n          <div>\n\n          </div>\n\n                <ul className={this.state.clicked ? 'nav-menu active' : 'nav-menu'}>\n                    {MenuItems.map((item, index) => {\n                        return (\n                            <li key={index}>\n                                <a className={item.cName} href={item.url}>\n                                {item.title}\n                                </a>\n                            </li>\n                        )\n                    })}\n                </ul>\n              \n                \n            </nav>\n\n              <div className=\"array-container\">\n                {array.map((value, idx) =>  (\n                  <div \n                  className=\"array-bar\" \n                  key={idx}\n                  style={{height: `${value}px`}}></div>\n                ))}\n              </div>\n\n              <td valign=\"bottom\"><div class = \"header-bottom\" > </div></td>\n            </>\n        );\n    }\n}\n\nfunction randomIntFromInterval(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n/*\nconst button = styled.button`\n  background-color: black;\n  color: white;\n  font-size: 20px;\n  align-items: top;\n  padding: 10px 60px;\n  border-radius: 5px;\n  margin: 10px 0px;\n  cursor: pointer;\n  &:hover {\n    background-color: #445b65;\n    color: white;\n }\n`;*/","//Loop through the array, shifting the largest element to the end each time\nexport function getBubbleSortAnimations(array) {\n    const animations = [];\n    bubbleSort(array, animations);\n    return animations;\n  }\n  \n  function bubbleSort(array, animations) {\n    let end = array.length - 1;\n    while (end >= 1) {\n      for (let j = 0; j < end; j++) {\n        if (array[j] > array[j + 1]) {\n          animations.push([j, j + 1]);\n          animations.push([j, j + 1]);\n          animations.push([j, array[j + 1]]);\n          animations.push([j + 1, array[j]]);\n          let temp = array[j];\n          array[j] = array[j + 1];\n          array[j + 1] = temp;\n        }\n      }\n      end--;\n    }\n  }","import logo from './logo.svg';\nimport SortingVisualizer from './SortingVisualizer/SortingVisualizer';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <SortingVisualizer> hi </SortingVisualizer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}