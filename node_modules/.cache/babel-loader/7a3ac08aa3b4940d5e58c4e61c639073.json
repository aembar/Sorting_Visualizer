{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/adithya/Documents/Sorting_Visualizer/src/SortingVisualizer/SortingVisualizer.jsx\";\nimport React from 'react';\nimport { getMergeSortAnimations } from '../sortingAlgorithms/sortingAlgorithms.js';\nimport { getQuickSortAnimations } from '../sortingAlgorithms/quickSort.js';\nimport { getHeapSortAnimations } from \"../sortingAlgorithms/heapSort.js\";\nimport { getBubbleSortAnimations } from \"../sortingAlgorithms/bubbleSort.js\";\nimport { Button } from \"../Button\";\nimport './SortingVisualizer.css';\nimport { MenuItems } from \"./MenuItems\";\nimport styled, { css } from 'styled-components';\nvar ANIMATION_SPEED_MS = 3;\nvar NUMBER_OF_ARRAY_BARS = 230;\nconst PRIMARY_COLOR = 'turquoise'; // This is the color of array bars that are being compared throughout the animations.\n\nconst SECONDARY_COLOR = 'red';\nexport default class SortingVisualizer extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.speedAndBars = x => {\n      if (x === 1) {\n        this.genRandomArray(153, 1);\n      } else if (x === 2) {\n        this.genRandomArray(200, 2);\n      } else if (x === 3) {\n        this.genRandomArray(275, 3);\n      } else if (x === -1) {\n        this.genRandomArray(100, -1);\n      } else if (x === -2) {\n        this.genRandomArray(55, -2);\n      }\n    };\n\n    this.resetColor = () => {\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n\n      for (let i = 0; i < arrayBars.length; i++) {\n        arrayBars[i].style.backgroundColor = rgb(0, 255, 191);\n      }\n    };\n\n    this.genRandomArray = (numberOfArrayBars, number) => {\n      // console.log(\"height \", window.innerHeight);\n      // console.log(\"width \", window.innerWidth);\n      // if (window.innerWidth >= 1400) {\n      //   numberOfArrayBars -= 20;\n      // }\n      if (number === 1) {\n        let array = [];\n\n        for (let i = 0; i < numberOfArrayBars; i++) {\n          array.push(this.randomIntFromInterval(10, 645));\n        }\n\n        document.querySelector(\".x\").style.backgroundColor = \"red\";\n        document.querySelector(\".xByFour\").style.backgroundColor = \"grey\";\n        document.querySelector(\".xByTwo\").style.backgroundColor = \"grey\";\n        document.querySelector(\".xMultiplyTwo\").style.backgroundColor = \"grey\";\n        document.querySelector(\".xMultiplyFour\").style.backgroundColor = \"grey\";\n        ANIMATION_SPEED_MS = 5;\n        this.setState({\n          array: array\n        }); //if we have called arrayBars with className 'array-bar', we wouldn't get the current clicked speed/bar button but the previous selection as setState is an asynchrnous so it doesn't update instantly, so we created seperate function for handling async function and get current state of the arrayBars\n\n        this.updateBarsState(6);\n      } else if (number === 2) {\n        let array = [];\n\n        for (let i = 0; i < numberOfArrayBars; i++) {\n          array.push(randomIntFromInterval(10, 645));\n        }\n\n        document.querySelector(\".x\").style.backgroundColor = \"grey\";\n        document.querySelector(\".xByFour\").style.backgroundColor = \"grey\";\n        document.querySelector(\".xByTwo\").style.backgroundColor = \"grey\";\n        document.querySelector(\".xMultiplyTwo\").style.backgroundColor = \"red\";\n        document.querySelector(\".xMultiplyFour\").style.backgroundColor = \"grey\";\n        ANIMATION_SPEED_MS = 4;\n        this.setState({\n          array: array\n        });\n        this.updateBarsState(4.3);\n      } else if (number === 3) {\n        let array = [];\n\n        for (let i = 0; i < numberOfArrayBars; i++) {\n          array.push(randomIntFromInterval(10, 645));\n        }\n\n        document.querySelector(\".x\").style.backgroundColor = \"grey\";\n        document.querySelector(\".xByFour\").style.backgroundColor = \"grey\";\n        document.querySelector(\".xByTwo\").style.backgroundColor = \"grey\";\n        document.querySelector(\".xMultiplyTwo\").style.backgroundColor = \"grey\";\n        document.querySelector(\".xMultiplyFour\").style.backgroundColor = \"red\";\n        ANIMATION_SPEED_MS = 2;\n        this.setState({\n          array: array\n        });\n        this.updateBarsState(2.75);\n      } else if (number === -1) {\n        let array = [];\n\n        for (let i = 0; i < numberOfArrayBars; i++) {\n          array.push(randomIntFromInterval(10, 645));\n        }\n\n        document.querySelector(\".x\").style.backgroundColor = \"grey\";\n        document.querySelector(\".xByFour\").style.backgroundColor = \"grey\";\n        document.querySelector(\".xByTwo\").style.backgroundColor = \"red\";\n        document.querySelector(\".xMultiplyTwo\").style.backgroundColor = \"grey\";\n        document.querySelector(\".xMultiplyFour\").style.backgroundColor = \"grey\";\n        ANIMATION_SPEED_MS = 8;\n        this.setState({\n          array: array\n        });\n        this.updateBarsState(9.5);\n      } else if (number === -2) {\n        let array = [];\n\n        for (let i = 0; i < numberOfArrayBars; i++) {\n          array.push(randomIntFromInterval(10, 645));\n        }\n\n        document.querySelector(\".x\").style.backgroundColor = \"grey\";\n        document.querySelector(\".xByFour\").style.backgroundColor = \"red\";\n        document.querySelector(\".xByTwo\").style.backgroundColor = \"grey\";\n        document.querySelector(\".xMultiplyTwo\").style.backgroundColor = \"grey\";\n        document.querySelector(\".xMultiplyFour\").style.backgroundColor = \"grey\";\n        ANIMATION_SPEED_MS = 50;\n        this.setState({\n          array: array\n        });\n        this.updateBarsState(16);\n      }\n\n      this.resetColor();\n    };\n\n    this.updateBarsState = width => {\n      // this.setState({ array: array });\n      let arrayBars = [];\n\n      async function something() {\n        const a = new Promise((res, rej) => {\n          const arrayBars = document.getElementsByClassName(\"array-bar\");\n          res(arrayBars);\n        });\n        const newArrayBars = await a;\n        arrayBars = newArrayBars;\n\n        for (let k = 0; k < arrayBars.length; k++) {\n          arrayBars[k].style.width = `${width}px`;\n        } // console.log(newArrayBars.length);\n        // console.log(arrayBars.length);\n\n      }\n\n      something();\n    };\n\n    this.state = {\n      array: []\n    };\n  }\n\n  componentDidMount() {\n    this.resetArray();\n  }\n\n  resetArray() {\n    const array = [];\n\n    for (let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\n      array.push(randomIntFromInterval(5, 705));\n    }\n\n    this.setState({\n      array\n    });\n  }\n\n  mergeSort() {\n    const animations = getMergeSortAnimations(this.state.array);\n\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName('array-bar');\n      const isColorChange = i % 3 !== 2;\n\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n  }\n\n  quickSort() {\n    const animations = getQuickSortAnimations(this.state.array);\n\n    for (let i = 0; i < animations.length; i++) {\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      const isColorChange = i % 4 <= 1; //const isColorChange = i % 3 !== 2;\n\n      if (isColorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = i % 4 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR; //const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS * 2);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight}px`;\n        }, i * ANIMATION_SPEED_MS * 2);\n      }\n    }\n  }\n\n  heapSort() {\n    const animations = getHeapSortAnimations(this.state.array);\n\n    for (let i = 0; i < animations.length; i++) {\n      const colorChange = i % 4 <= 1;\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n\n      if (colorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = i % 4 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n  }\n\n  bubbleSort() {\n    const animations = getBubbleSortAnimations(this.state.array);\n\n    for (let i = 0; i < animations.length; i++) {\n      const colorChange = i % 4 <= 1;\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n\n      if (colorChange) {\n        const [barOneIdx, barTwoIdx] = animations[i];\n        const barOneStyle = arrayBars[barOneIdx].style;\n        const barTwoStyle = arrayBars[barTwoIdx].style;\n        const color = i % 4 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n        setTimeout(() => {\n          barOneStyle.backgroundColor = color;\n          barTwoStyle.backgroundColor = color;\n        }, i * ANIMATION_SPEED_MS);\n      } else {\n        setTimeout(() => {\n          const [barOneIdx, newHeight] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          barOneStyle.height = `${newHeight}px`;\n        }, i * ANIMATION_SPEED_MS);\n      }\n    }\n  }\n\n  render() {\n    const {\n      array\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"NavbarItems\",\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"navbar-logo\",\n          children: [\"SortingVisualizer\", /*#__PURE__*/_jsxDEV(\"i\", {\n            class: \"fab fa-react\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 62\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"menu-icon\",\n          onClick: this.handleClick,\n          children: /*#__PURE__*/_jsxDEV(\"i\", {\n            className: this.state.clicked ? 'fas fa-times' : 'fas fa-bars'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 268,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"btn-toolbar\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.resetArray(),\n            style: {\n              float: 'right'\n            },\n            children: \" New Array\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 272,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.mergeSort(),\n            style: {\n              float: 'right'\n            },\n            children: \" Merge Sort \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.quickSort(),\n            style: {\n              float: 'right'\n            },\n            children: \" Quick Sort \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.heapSort(),\n            style: {\n              float: 'right'\n            },\n            children: \" Heap Sort \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 275,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => this.bubbleSort(),\n            style: {\n              float: 'right'\n            },\n            children: \" Bubble Sort \"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 271,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn-toolbar\",\n          role: \"toolbar\",\n          \"aria-label\": \"Toolbar with button groups\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"btn-group mr-2\",\n            role: \"group\",\n            \"aria-label\": \"First group\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-secondary\" // disabled\n              ,\n              title: \"Increase speed and decrease number of array-bars or vice-versa\",\n              children: \"Speed\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 288,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-secondary xByFour\",\n              title: \"Decrease in speed and decrease in number of array bars\",\n              onClick: () => this.speedAndBars(-2),\n              children: \"x/4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 296,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-secondary xByTwo\",\n              title: \"Decrease in speed by half and decrease in number of bars\",\n              onClick: () => this.speedAndBars(-1),\n              children: \"x/2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 304,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-secondary x\",\n              title: \"Default speed and number of array bars\",\n              onClick: () => this.speedAndBars(1),\n              children: \"x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-secondary xMultiplyTwo\",\n              title: \"Increase speed 2x and increase in number of array-bars \",\n              onClick: () => this.speedAndBars(2),\n              children: \"2x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 320,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              className: \"btn btn-secondary xMultiplyFour\",\n              title: \"Increase speed 4x and increase in number of array bars\",\n              onClick: () => {\n                this.speedAndBars(3);\n              },\n              children: \"4x\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 283,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 278,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 340,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: this.state.clicked ? 'nav-menu active' : 'nav-menu',\n          children: MenuItems.map((item, index) => {\n            return /*#__PURE__*/_jsxDEV(\"li\", {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                className: item.cName,\n                href: item.url,\n                children: item.title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 33\n              }, this)\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 347,\n              columnNumber: 29\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 344,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 14\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"array-container\",\n        children: array.map((value, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"array-bar\",\n          style: {\n            height: `${value}px`\n          }\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 361,\n          columnNumber: 19\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 359,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nfunction randomIntFromInterval(min, max) {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n}\n/*\nconst Button = styled.button`\n  background-color: black;\n  color: white;\n  font-size: 20px;\n  align-items: top;\n  padding: 10px 60px;\n  border-radius: 5px;\n  margin: 10px 0px;\n  cursor: pointer;\n  &:hover {\n    background-color: #445b65;\n    color: white;\n }\n`;*/","map":{"version":3,"sources":["/Users/adithya/Documents/Sorting_Visualizer/src/SortingVisualizer/SortingVisualizer.jsx"],"names":["React","getMergeSortAnimations","getQuickSortAnimations","getHeapSortAnimations","getBubbleSortAnimations","Button","MenuItems","styled","css","ANIMATION_SPEED_MS","NUMBER_OF_ARRAY_BARS","PRIMARY_COLOR","SECONDARY_COLOR","SortingVisualizer","Component","constructor","props","speedAndBars","x","genRandomArray","resetColor","arrayBars","document","getElementsByClassName","i","length","style","backgroundColor","rgb","numberOfArrayBars","number","array","push","randomIntFromInterval","querySelector","setState","updateBarsState","width","something","a","Promise","res","rej","newArrayBars","k","state","componentDidMount","resetArray","mergeSort","animations","isColorChange","barOneIdx","barTwoIdx","barOneStyle","barTwoStyle","color","setTimeout","newHeight","height","quickSort","heapSort","colorChange","bubbleSort","render","handleClick","clicked","float","map","item","index","cName","url","title","value","idx","min","max","Math","floor","random"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {getMergeSortAnimations} from '../sortingAlgorithms/sortingAlgorithms.js';\nimport {getQuickSortAnimations} from '../sortingAlgorithms/quickSort.js';\nimport { getHeapSortAnimations } from \"../sortingAlgorithms/heapSort.js\";\nimport { getBubbleSortAnimations } from \"../sortingAlgorithms/bubbleSort.js\";\nimport { Button } from \"../Button\"\n\n\n\n\nimport './SortingVisualizer.css';\nimport { MenuItems } from \"./MenuItems\"\nimport styled, { css } from 'styled-components';\n\n var ANIMATION_SPEED_MS = 3;\n\n var NUMBER_OF_ARRAY_BARS = 230;\n\n\nconst PRIMARY_COLOR = 'turquoise';\n\n// This is the color of array bars that are being compared throughout the animations.\nconst SECONDARY_COLOR = 'red';\n\nexport default class SortingVisualizer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            array: [],\n        };\n    }\n\n    speedAndBars = x => {\n      if (x === 1) {\n        this.genRandomArray(153, 1);\n      } else if (x === 2) {\n        this.genRandomArray(200, 2);\n      } else if (x === 3) {\n        this.genRandomArray(275, 3);\n      } else if (x === -1) {\n        this.genRandomArray(100, -1);\n      } else if (x === -2) {\n        this.genRandomArray(55, -2);\n      }\n    };\n\n    resetColor = () => {\n      const arrayBars = document.getElementsByClassName(\"array-bar\");\n      for (let i = 0; i < arrayBars.length; i++) {\n        arrayBars[i].style.backgroundColor = rgb(0, 255, 191);\n      }\n    };\n\n    genRandomArray = (numberOfArrayBars, number) => {\n      // console.log(\"height \", window.innerHeight);\n      // console.log(\"width \", window.innerWidth);\n      // if (window.innerWidth >= 1400) {\n      //   numberOfArrayBars -= 20;\n      // }\n      if (number === 1) {\n        let array = [];\n        for (let i = 0; i < numberOfArrayBars; i++) {\n          array.push(this.randomIntFromInterval(10, 645));\n        }\n        document.querySelector(\".x\").style.backgroundColor = \"red\";\n        document.querySelector(\".xByFour\").style.backgroundColor = \"grey\";\n        document.querySelector(\".xByTwo\").style.backgroundColor = \"grey\";\n        document.querySelector(\".xMultiplyTwo\").style.backgroundColor = \"grey\";\n        document.querySelector(\".xMultiplyFour\").style.backgroundColor = \"grey\";\n        ANIMATION_SPEED_MS = 5;\n        this.setState({ array: array });\n        //if we have called arrayBars with className 'array-bar', we wouldn't get the current clicked speed/bar button but the previous selection as setState is an asynchrnous so it doesn't update instantly, so we created seperate function for handling async function and get current state of the arrayBars\n        this.updateBarsState(6);\n      } else if (number === 2) {\n        let array = [];\n        for (let i = 0; i < numberOfArrayBars; i++) {\n          array.push(randomIntFromInterval(10, 645));\n        }\n        document.querySelector(\".x\").style.backgroundColor = \"grey\";\n        document.querySelector(\".xByFour\").style.backgroundColor = \"grey\";\n        document.querySelector(\".xByTwo\").style.backgroundColor = \"grey\";\n        document.querySelector(\".xMultiplyTwo\").style.backgroundColor = \"red\";\n        document.querySelector(\".xMultiplyFour\").style.backgroundColor = \"grey\";\n        ANIMATION_SPEED_MS = 4;\n        this.setState({ array: array });\n        this.updateBarsState(4.3);\n      } else if (number === 3) {\n        let array = [];\n        for (let i = 0; i < numberOfArrayBars; i++) {\n          array.push(randomIntFromInterval(10, 645));\n        }\n        document.querySelector(\".x\").style.backgroundColor = \"grey\";\n        document.querySelector(\".xByFour\").style.backgroundColor = \"grey\";\n        document.querySelector(\".xByTwo\").style.backgroundColor = \"grey\";\n        document.querySelector(\".xMultiplyTwo\").style.backgroundColor = \"grey\";\n        document.querySelector(\".xMultiplyFour\").style.backgroundColor = \"red\";\n        ANIMATION_SPEED_MS = 2;\n        this.setState({ array: array });\n        this.updateBarsState(2.75);\n      } else if (number === -1) {\n        let array = [];\n        for (let i = 0; i < numberOfArrayBars; i++) {\n          array.push(randomIntFromInterval(10, 645));\n        }\n  \n        document.querySelector(\".x\").style.backgroundColor = \"grey\";\n        document.querySelector(\".xByFour\").style.backgroundColor = \"grey\";\n        document.querySelector(\".xByTwo\").style.backgroundColor = \"red\";\n        document.querySelector(\".xMultiplyTwo\").style.backgroundColor = \"grey\";\n        document.querySelector(\".xMultiplyFour\").style.backgroundColor = \"grey\";\n        ANIMATION_SPEED_MS = 8;\n        this.setState({ array: array });\n        this.updateBarsState(9.5);\n      } else if (number === -2) {\n        let array = [];\n        for (let i = 0; i < numberOfArrayBars; i++) {\n          array.push(randomIntFromInterval(10, 645));\n        }\n        document.querySelector(\".x\").style.backgroundColor = \"grey\";\n        document.querySelector(\".xByFour\").style.backgroundColor = \"red\";\n        document.querySelector(\".xByTwo\").style.backgroundColor = \"grey\";\n        document.querySelector(\".xMultiplyTwo\").style.backgroundColor = \"grey\";\n        document.querySelector(\".xMultiplyFour\").style.backgroundColor = \"grey\";\n        ANIMATION_SPEED_MS = 50;\n        this.setState({ array: array });\n        this.updateBarsState(16);\n      }\n      this.resetColor();\n    };\n\n    updateBarsState = width => {\n      // this.setState({ array: array });\n      let arrayBars = [];\n      async function something() {\n        const a = new Promise((res, rej) => {\n          const arrayBars = document.getElementsByClassName(\"array-bar\");\n          res(arrayBars);\n        });\n        const newArrayBars = await a;\n        arrayBars = newArrayBars;\n        for (let k = 0; k < arrayBars.length; k++) {\n          arrayBars[k].style.width = `${width}px`;\n        }\n        // console.log(newArrayBars.length);\n        // console.log(arrayBars.length);\n      }\n      something();\n    };\n\n\n    componentDidMount() {\n        this.resetArray();\n    }\n\n    resetArray(){\n        const array = [];\n        for(let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\n            array.push(randomIntFromInterval(5,705));\n        }\n        this.setState({array});\n    }\n\n    mergeSort() {\n        const animations = getMergeSortAnimations(this.state.array);\n        for (let i = 0; i < animations.length; i++) {\n          const arrayBars = document.getElementsByClassName('array-bar');\n          const isColorChange = i % 3 !== 2;\n          if (isColorChange) {\n            const [barOneIdx, barTwoIdx] = animations[i];\n            const barOneStyle = arrayBars[barOneIdx].style;\n            const barTwoStyle = arrayBars[barTwoIdx].style;\n            const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n            setTimeout(() => {\n              barOneStyle.backgroundColor = color;\n              barTwoStyle.backgroundColor = color;\n            }, i * ANIMATION_SPEED_MS);\n          } else {\n            setTimeout(() => {\n              const [barOneIdx, newHeight] = animations[i];\n              const barOneStyle = arrayBars[barOneIdx].style;\n              barOneStyle.height = `${newHeight}px`;\n            }, i * ANIMATION_SPEED_MS);\n          }\n        }\n      }\n    quickSort() {\n        const animations = getQuickSortAnimations(this.state.array);\n        for (let i = 0; i < animations.length; i++) {\n          const arrayBars = document.getElementsByClassName(\"array-bar\");\n          const isColorChange = i % 4 <= 1;\n          //const isColorChange = i % 3 !== 2;\n          if (isColorChange) {\n            const [barOneIdx, barTwoIdx] = animations[i];\n            const barOneStyle = arrayBars[barOneIdx].style;\n            const barTwoStyle = arrayBars[barTwoIdx].style;\n            const color = i % 4 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n            //const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n            setTimeout(() => {\n              barOneStyle.backgroundColor = color;\n              barTwoStyle.backgroundColor = color;\n            }, i * ANIMATION_SPEED_MS * 2 );\n          } else {\n            setTimeout(() => {\n              const [barOneIdx, newHeight] = animations[i];\n              const barOneStyle = arrayBars[barOneIdx].style;\n              barOneStyle.height = `${newHeight}px`;\n            }, i * ANIMATION_SPEED_MS * 2);\n          }\n        }\n    }\n\n    heapSort() {\n      const animations = getHeapSortAnimations(this.state.array);\n        for (let i = 0; i < animations.length; i++) {\n          const colorChange = i % 4 <= 1;\n          const arrayBars = document.getElementsByClassName(\"array-bar\");\n          if (colorChange) {\n            const [barOneIdx, barTwoIdx] = animations[i];\n            const barOneStyle = arrayBars[barOneIdx].style;\n            const barTwoStyle = arrayBars[barTwoIdx].style;\n            const color = i % 4 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n            setTimeout(() => {\n              barOneStyle.backgroundColor = color;\n              barTwoStyle.backgroundColor = color;\n            }, i * ANIMATION_SPEED_MS);\n          } else {\n            setTimeout(() => {\n              const [barOneIdx, newHeight] = animations[i];\n              const barOneStyle = arrayBars[barOneIdx].style;\n              barOneStyle.height = `${newHeight}px`;\n            }, i * ANIMATION_SPEED_MS);\n          }\n        }\n    }\n\n    bubbleSort() {\n      const animations = getBubbleSortAnimations(this.state.array);\n      for (let i = 0; i < animations.length; i++) {\n        const colorChange = i % 4 <= 1;\n        const arrayBars = document.getElementsByClassName(\"array-bar\");\n        if (colorChange) {\n          const [barOneIdx, barTwoIdx] = animations[i];\n          const barOneStyle = arrayBars[barOneIdx].style;\n          const barTwoStyle = arrayBars[barTwoIdx].style;\n          const color = i % 4 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n          setTimeout(() => {\n            barOneStyle.backgroundColor = color;\n            barTwoStyle.backgroundColor = color;\n          }, i * ANIMATION_SPEED_MS);\n        } else {\n          setTimeout(() => {\n            const [barOneIdx, newHeight] = animations[i];\n            const barOneStyle = arrayBars[barOneIdx].style;\n            barOneStyle.height = `${newHeight}px`;\n          }, i * ANIMATION_SPEED_MS);\n        }\n      }\n\n    }\n\n    render(){\n        const {array} = this.state;\n        return (\n            <>\n             <nav className=\"NavbarItems\">\n                <h1 className=\"navbar-logo\">SortingVisualizer<i class=\"fab fa-react\"></i></h1>\n                <div className=\"menu-icon\" onClick={this.handleClick}>\n                    <i className={this.state.clicked ? 'fas fa-times' : 'fas fa-bars'}></i>\n                </div>\n                <div class=\"btn-toolbar\">\n                <Button onClick={() => this.resetArray()} style={{float: 'right'}}> New Array</Button>\n                <Button onClick={() => this.mergeSort()} style={{float: 'right'}}> Merge Sort </Button>\n                <Button onClick={() => this.quickSort()} style={{float: 'right'}}> Quick Sort </Button>\n                <Button onClick={() => this.heapSort()} style={{float: 'right'}}> Heap Sort </Button>\n                <Button onClick={() => this.bubbleSort()} style={{float: 'right'}}> Bubble Sort </Button>\n                </div>\n                <div\n                  className=\"btn-toolbar\"\n                  role=\"toolbar\"\n                  aria-label=\"Toolbar with button groups\"\n                >\n            <div\n              className=\"btn-group mr-2\"\n              role=\"group\"\n              aria-label=\"First group\"\n            >\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary\"\n                // disabled\n                title=\"Increase speed and decrease number of array-bars or vice-versa\"\n              >\n                Speed\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary xByFour\"\n                title=\"Decrease in speed and decrease in number of array bars\"\n                onClick={() => this.speedAndBars(-2)}\n              >\n                x/4\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary xByTwo\"\n                title=\"Decrease in speed by half and decrease in number of bars\"\n                onClick={() => this.speedAndBars(-1)}\n              >\n                x/2\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary x\"\n                title=\"Default speed and number of array bars\"\n                onClick={() => this.speedAndBars(1)}\n              >\n                x\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary xMultiplyTwo\"\n                title=\"Increase speed 2x and increase in number of array-bars \"\n                onClick={() => this.speedAndBars(2)}\n              >\n                2x\n              </button>\n              <button\n                type=\"button\"\n                className=\"btn btn-secondary xMultiplyFour\"\n                title=\"Increase speed 4x and increase in number of array bars\"\n                onClick={() => {\n                  this.speedAndBars(3);\n                }}\n              >\n                4x\n              </button>\n            </div>\n          </div>\n          <div>\n\n          </div>\n\n                <ul className={this.state.clicked ? 'nav-menu active' : 'nav-menu'}>\n                    {MenuItems.map((item, index) => {\n                        return (\n                            <li key={index}>\n                                <a className={item.cName} href={item.url}>\n                                {item.title}\n                                </a>\n                            </li>\n                        )\n                    })}\n                </ul>\n              \n                \n            </nav>\n\n              <div className=\"array-container\">\n                {array.map((value, idx) =>  (\n                  <div \n                  className=\"array-bar\" \n                  key={idx}\n                  style={{height: `${value}px`}}></div>\n                ))}\n              </div>\n            </>\n        );\n    }\n}\n\nfunction randomIntFromInterval(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\n/*\nconst Button = styled.button`\n  background-color: black;\n  color: white;\n  font-size: 20px;\n  align-items: top;\n  padding: 10px 60px;\n  border-radius: 5px;\n  margin: 10px 0px;\n  cursor: pointer;\n  &:hover {\n    background-color: #445b65;\n    color: white;\n }\n`;*/\n"]},"metadata":{},"sourceType":"module"}