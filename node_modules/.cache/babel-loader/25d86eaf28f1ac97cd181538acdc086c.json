{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/adithya/Documents/Sorting_Visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _slicedToArray from\"/Users/adithya/Documents/Sorting_Visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _classCallCheck from\"/Users/adithya/Documents/Sorting_Visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/adithya/Documents/Sorting_Visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"/Users/adithya/Documents/Sorting_Visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/adithya/Documents/Sorting_Visualizer/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";function _templateObject(){var data=_taggedTemplateLiteral([\"\\n  background-color: black;\\n  color: white;\\n  font-size: 20px;\\n  align-items: top;\\n  padding: 10px 60px;\\n  border-radius: 5px;\\n  margin: 10px 0px;\\n  cursor: pointer;\\n\"]);_templateObject=function _templateObject(){return data;};return data;}import React from'react';import{getMergeSortAnimations}from'../sortingAlgorithms/sortingAlgorithms.js';import'./SortingVisualizer.css';import styled,{css}from'styled-components';var ANIMATION_SPEED_MS=3;var NUMBER_OF_ARRAY_BARS=310;var PRIMARY_COLOR='turquoise';// This is the color of array bars that are being compared throughout the animations.\nvar SECONDARY_COLOR='red';var SortingVisualizer=/*#__PURE__*/function(_React$Component){_inherits(SortingVisualizer,_React$Component);var _super=_createSuper(SortingVisualizer);function SortingVisualizer(props){var _this;_classCallCheck(this,SortingVisualizer);_this=_super.call(this,props);_this.state={array:[]};return _this;}_createClass(SortingVisualizer,[{key:\"componentDidMount\",value:function componentDidMount(){this.resetArray();}},{key:\"resetArray\",value:function resetArray(){var array=[];for(var i=0;i<NUMBER_OF_ARRAY_BARS;i++){array.push(randomIntFromInterval(5,730));}this.setState({array:array});}},{key:\"mergeSort\",value:function mergeSort(){var animations=getMergeSortAnimations(this.state.array);var _loop=function _loop(i){var arrayBars=document.getElementsByClassName('array-bar');var isColorChange=i%3!==2;if(isColorChange){var _animations$i=_slicedToArray(animations[i],2),barOneIdx=_animations$i[0],barTwoIdx=_animations$i[1];var barOneStyle=arrayBars[barOneIdx].style;var barTwoStyle=arrayBars[barTwoIdx].style;var color=i%3===0?SECONDARY_COLOR:PRIMARY_COLOR;setTimeout(function(){barOneStyle.backgroundColor=color;barTwoStyle.backgroundColor=color;},i*ANIMATION_SPEED_MS);}else{setTimeout(function(){var _animations$i2=_slicedToArray(animations[i],2),barOneIdx=_animations$i2[0],newHeight=_animations$i2[1];var barOneStyle=arrayBars[barOneIdx].style;barOneStyle.height=\"\".concat(newHeight,\"px\");},i*ANIMATION_SPEED_MS);}};for(var i=0;i<animations.length;i++){_loop(i);}}},{key:\"quickSort\",value:function quickSort(){}},{key:\"heapSort\",value:function heapSort(){}},{key:\"bubbleSort\",value:function bubbleSort(){}},{key:\"render\",value:function render(){var _this2=this;var array=this.state.array;return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return _this2.resetArray();},style:{float:'top'},children:\"Generate New Array\"}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return _this2.mergeSort();},style:{float:'top'},children:\" Merge Sort \"}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return _this2.quickSort();},style:{float:'top'},children:\" Quick Sort \"}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return _this2.heapSort();},style:{float:'top'},children:\" Heap Sort \"}),/*#__PURE__*/_jsx(Button,{onClick:function onClick(){return _this2.bubbleSort();},style:{float:'top'},children:\" Bubble Sort \"}),/*#__PURE__*/_jsx(\"div\",{className:\"array-container\",children:array.map(function(value,idx){return/*#__PURE__*/_jsx(\"div\",{className:\"array-bar\",style:{height:\"\".concat(value,\"px\")}},idx);})})]});}}]);return SortingVisualizer;}(React.Component);export{SortingVisualizer as default};function randomIntFromInterval(min,max){return Math.floor(Math.random()*(max-min+1)+min);}var Button=styled.button(_templateObject());","map":{"version":3,"sources":["/Users/adithya/Documents/Sorting_Visualizer/src/SortingVisualizer/SortingVisualizer.jsx"],"names":["React","getMergeSortAnimations","styled","css","ANIMATION_SPEED_MS","NUMBER_OF_ARRAY_BARS","PRIMARY_COLOR","SECONDARY_COLOR","SortingVisualizer","props","state","array","resetArray","i","push","randomIntFromInterval","setState","animations","arrayBars","document","getElementsByClassName","isColorChange","barOneIdx","barTwoIdx","barOneStyle","style","barTwoStyle","color","setTimeout","backgroundColor","newHeight","height","length","float","mergeSort","quickSort","heapSort","bubbleSort","map","value","idx","Component","min","max","Math","floor","random","Button","button"],"mappings":"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","sourcesContent":["import React from 'react';\nimport {getMergeSortAnimations} from '../sortingAlgorithms/sortingAlgorithms.js';\n\nimport './SortingVisualizer.css';\nimport styled, { css } from 'styled-components';\n\nconst ANIMATION_SPEED_MS = 3;\n\nconst NUMBER_OF_ARRAY_BARS = 310;\n\nconst PRIMARY_COLOR = 'turquoise';\n\n// This is the color of array bars that are being compared throughout the animations.\nconst SECONDARY_COLOR = 'red';\n\nexport default class SortingVisualizer extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            array: [],\n        };\n    }\n\n    componentDidMount() {\n        this.resetArray();\n    }\n\n    resetArray(){\n        const array = [];\n        for(let i = 0; i < NUMBER_OF_ARRAY_BARS; i++) {\n            array.push(randomIntFromInterval(5,730));\n        }\n        this.setState({array});\n    }\n\n    mergeSort() {\n        const animations = getMergeSortAnimations(this.state.array);\n        for (let i = 0; i < animations.length; i++) {\n          const arrayBars = document.getElementsByClassName('array-bar');\n          const isColorChange = i % 3 !== 2;\n          if (isColorChange) {\n            const [barOneIdx, barTwoIdx] = animations[i];\n            const barOneStyle = arrayBars[barOneIdx].style;\n            const barTwoStyle = arrayBars[barTwoIdx].style;\n            const color = i % 3 === 0 ? SECONDARY_COLOR : PRIMARY_COLOR;\n            setTimeout(() => {\n              barOneStyle.backgroundColor = color;\n              barTwoStyle.backgroundColor = color;\n            }, i * ANIMATION_SPEED_MS);\n          } else {\n            setTimeout(() => {\n              const [barOneIdx, newHeight] = animations[i];\n              const barOneStyle = arrayBars[barOneIdx].style;\n              barOneStyle.height = `${newHeight}px`;\n            }, i * ANIMATION_SPEED_MS);\n          }\n        }\n      }\n\n    quickSort() {\n\n        \n    }\n\n    heapSort() {}\n\n    bubbleSort() {}\n\n    render(){\n        const {array} = this.state;\n        return (\n            <>\n            <Button onClick={() => this.resetArray()} style={{float: 'top'}}>Generate New Array</Button>\n            <Button onClick={() => this.mergeSort()} style={{float: 'top'}}> Merge Sort </Button>\n            <Button onClick={() => this.quickSort()} style={{float: 'top'}}> Quick Sort </Button>\n            <Button onClick={() => this.heapSort()} style={{float: 'top'}}> Heap Sort </Button>\n            <Button onClick={() => this.bubbleSort()} style={{float: 'top'}}> Bubble Sort </Button>\n\n            <div className=\"array-container\">\n              {array.map((value, idx) =>  (\n                <div \n                className=\"array-bar\" \n                key={idx}\n                style={{height: `${value}px`}}></div>\n              ))}\n            </div>\n            </>\n        );\n    }\n}\n\nfunction randomIntFromInterval(min, max) {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n}\n\nconst Button = styled.button`\n  background-color: black;\n  color: white;\n  font-size: 20px;\n  align-items: top;\n  padding: 10px 60px;\n  border-radius: 5px;\n  margin: 10px 0px;\n  cursor: pointer;\n`;\n"]},"metadata":{},"sourceType":"module"}