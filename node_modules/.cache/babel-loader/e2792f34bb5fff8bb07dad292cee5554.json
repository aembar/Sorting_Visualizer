{"ast":null,"code":"//Loop through the array, shifting the largest element to the end each time\nexport function getBubbleSortAnimations(array){var animations=[];bubbleSort(array,animations);return animations;}function bubbleSort(array,animations){var end=array.length-1;while(end>=1){for(var j=0;j<end;j++){if(array[j]>array[j+1]){animations.push([j,j+1]);animations.push([j,j+1]);animations.push([j,array[j+1]]);animations.push([j+1,array[j]]);var temp=array[j];array[j]=array[j+1];array[j+1]=temp;}}end--;}}","map":{"version":3,"sources":["/Users/adithya/Documents/Sorting_Visualizer/src/sortingAlgorithms/bubbleSort.js"],"names":["getBubbleSortAnimations","array","animations","bubbleSort","end","length","j","push","temp"],"mappings":"AAAA;AACA,MAAO,SAASA,CAAAA,uBAAT,CAAiCC,KAAjC,CAAwC,CAC3C,GAAMC,CAAAA,UAAU,CAAG,EAAnB,CACAC,UAAU,CAACF,KAAD,CAAQC,UAAR,CAAV,CACA,MAAOA,CAAAA,UAAP,CACD,CAED,QAASC,CAAAA,UAAT,CAAoBF,KAApB,CAA2BC,UAA3B,CAAuC,CACrC,GAAIE,CAAAA,GAAG,CAAGH,KAAK,CAACI,MAAN,CAAe,CAAzB,CACA,MAAOD,GAAG,EAAI,CAAd,CAAiB,CACf,IAAK,GAAIE,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAGF,GAApB,CAAyBE,CAAC,EAA1B,CAA8B,CAC5B,GAAIL,KAAK,CAACK,CAAD,CAAL,CAAWL,KAAK,CAACK,CAAC,CAAG,CAAL,CAApB,CAA6B,CAC3BJ,UAAU,CAACK,IAAX,CAAgB,CAACD,CAAD,CAAIA,CAAC,CAAG,CAAR,CAAhB,EACAJ,UAAU,CAACK,IAAX,CAAgB,CAACD,CAAD,CAAIA,CAAC,CAAG,CAAR,CAAhB,EACAJ,UAAU,CAACK,IAAX,CAAgB,CAACD,CAAD,CAAIL,KAAK,CAACK,CAAC,CAAG,CAAL,CAAT,CAAhB,EACAJ,UAAU,CAACK,IAAX,CAAgB,CAACD,CAAC,CAAG,CAAL,CAAQL,KAAK,CAACK,CAAD,CAAb,CAAhB,EACA,GAAIE,CAAAA,IAAI,CAAGP,KAAK,CAACK,CAAD,CAAhB,CACAL,KAAK,CAACK,CAAD,CAAL,CAAWL,KAAK,CAACK,CAAC,CAAG,CAAL,CAAhB,CACAL,KAAK,CAACK,CAAC,CAAG,CAAL,CAAL,CAAeE,IAAf,CACD,CACF,CACDJ,GAAG,GACJ,CACF","sourcesContent":["//Loop through the array, shifting the largest element to the end each time\nexport function getBubbleSortAnimations(array) {\n    const animations = [];\n    bubbleSort(array, animations);\n    return animations;\n  }\n  \n  function bubbleSort(array, animations) {\n    let end = array.length - 1;\n    while (end >= 1) {\n      for (let j = 0; j < end; j++) {\n        if (array[j] > array[j + 1]) {\n          animations.push([j, j + 1]);\n          animations.push([j, j + 1]);\n          animations.push([j, array[j + 1]]);\n          animations.push([j + 1, array[j]]);\n          let temp = array[j];\n          array[j] = array[j + 1];\n          array[j + 1] = temp;\n        }\n      }\n      end--;\n    }\n  }"]},"metadata":{},"sourceType":"module"}